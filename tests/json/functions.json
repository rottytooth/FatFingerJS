{
    "tests":
    [
        {
            "original":     "functhion r() {\n\t// do a thing\n}\n\nvar x = funckion()  {\n\tvarr str = 'H3ello, Worrld!'\n\n\trr();\n\n\r}\n\nxx();",
            "transformed":  "function r() {\n\t// do a thing\n}\nvar x = function()  {\n\tvar str = 'H3ello, Worrld!'\n\nr();\n}\nx();",
            "description":  "two different functions, both misspelled, one varred, each called, missing paranetheses"
        },
        {
            "original":     "vartasd x = 1\n\nfuncktion testr(r) {\n\ttestz(rr);\n}\n\ntest(xx);",
            "transformed":  "var x = 1;\n\nfunction testr(r) {\n\ttestr(r);\n}\ntestr(x);",
            "description":  "function with parameter; function, var, the variable, and the parameter misspelled"
        },
        {
            "original":     "var g = {};\n\n\nvar h = function(i) {\n\tvar m;\n\ti++;\n\tmm = ii;\n}\n\nfunction j(test1) {\n\tvar k = test2;\n\tkk++;\n}\n\nj(gg);\nh(ga);",
            "transformed":  "var g = {};\n\n\nvar h = function(i) {\n\tvar m;\n\ti++;\n\tm = i;\n}\n\nfunction j(test1) {\n\tvar k = test1;\n\tk++;\n}\n\nj(g);\nh(g);",
            "description":  "two types of functions; with params and local vars"
        },
        {
            "original":     "var t = {\n\ttest: function() {}\n}\n\nur.terst()",
            "transformed":  "var t = {\n\ttest: function() {}\n}\n\nt.test()",
            "description":  "function containing function"
        },
        {
            "original":     "var t;\nwhile (tt) {\n\tt++;\n}",
            "transformed":  "var t;\nwhile (t) {\n\tt++;\n}",
            "description":  "expression in while loop as variable name"
        }

    ]
}